[{"C:\\Users\\NOEL ROY\\projects\\weather\\src\\index.js":"1","C:\\Users\\NOEL ROY\\projects\\weather\\src\\App.js":"2","C:\\Users\\NOEL ROY\\projects\\weather\\src\\reportWebVitals.js":"3","C:\\Users\\NOEL ROY\\projects\\weather\\src\\Mani\\Mani.js":"4","C:\\Users\\NOEL ROY\\projects\\weather\\src\\Abhi\\Abhi.js":"5","C:\\Users\\NOEL ROY\\projects\\weather\\src\\Home\\Home.js":"6","C:\\Users\\NOEL ROY\\projects\\weather\\src\\Navbar\\Navbar.js":"7","C:\\Users\\NOEL ROY\\projects\\weather\\src\\City\\City.js":"8","C:\\Users\\NOEL ROY\\projects\\weather\\src\\Map\\Map.js":"9","C:\\Users\\NOEL ROY\\projects\\weather\\src\\About\\About.js":"10"},{"size":540,"mtime":1609847958412,"results":"11","hashOfConfig":"12"},{"size":1373,"mtime":1613738597843,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":3083,"mtime":1609863202944,"results":"15","hashOfConfig":"12"},{"size":797,"mtime":1609904682701,"results":"16","hashOfConfig":"12"},{"size":2159,"mtime":1609904271619,"results":"17","hashOfConfig":"12"},{"size":922,"mtime":1609931302817,"results":"18","hashOfConfig":"12"},{"size":2800,"mtime":1609925653374,"results":"19","hashOfConfig":"12"},{"size":5642,"mtime":1609931365508,"results":"20","hashOfConfig":"12"},{"size":166,"mtime":1613738173199,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"acil1l",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\NOEL ROY\\projects\\weather\\src\\index.js",["46"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Route} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["47","48"],"C:\\Users\\NOEL ROY\\projects\\weather\\src\\App.js",["49"],"C:\\Users\\NOEL ROY\\projects\\weather\\src\\reportWebVitals.js",[],"C:\\Users\\NOEL ROY\\projects\\weather\\src\\Mani\\Mani.js",[],"C:\\Users\\NOEL ROY\\projects\\weather\\src\\Abhi\\Abhi.js",[],"C:\\Users\\NOEL ROY\\projects\\weather\\src\\Home\\Home.js",[],"C:\\Users\\NOEL ROY\\projects\\weather\\src\\Navbar\\Navbar.js",["50","51"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport '../Mani/Mani.css'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    console.log(props)\r\n    // let [car, setCar] = useState(window.location.pathname)\r\n    let location = useLocation(), car = location.pathname;\r\n\r\n    // useEffect(() => {\r\n    //     setCar(window.location.pathname)\r\n    // }, [window.location.pathname])\r\n    return (\r\n        <div>\r\n            <div className=\"topnav\">\r\n                <Link className={car === '/' ? 'active' : null} to=\"/\">Home</Link>\r\n                <Link className={car === '/city' ? 'active' : null} to=\"/city\">City</Link>\r\n                <Link className={car === '/map' ? 'active' : null} to=\"/map\">Map</Link>\r\n                <Link className={car === '/about' ? 'active' : null} to=\"/about\">About</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Navbar;","C:\\Users\\NOEL ROY\\projects\\weather\\src\\City\\City.js",[],"C:\\Users\\NOEL ROY\\projects\\weather\\src\\Map\\Map.js",["52"],"import React, { useState, useEffect } from \"react\";\r\nimport { MapContainer, Marker, Popup, TileLayer, useMapEvents } from \"react-leaflet\";\r\nimport './Map.css';\r\nimport axios from \"axios\";\r\n\r\nconst Map = () => {\r\n    let newDate = new Date()\r\n    const [weather, setWeather] = useState({});\r\n    const [currentPos, setCurrentPos] = useState()\r\n    const [isVisible, setIsVisible] = useState(true);\r\n    const handleClick = (event) => {\r\n        alert('ganavi')\r\n        setCurrentPos(event.latlng)\r\n\r\n    }\r\n\r\n    function LocationMarker() {\r\n        const [position, setPosition] = useState(null)\r\n        const map = useMapEvents({\r\n            click(e) {\r\n                console.log(e)\r\n                setCurrentPos(e.latlng)\r\n                setPosition(e.latlng)\r\n\r\n            },\r\n\r\n        })\r\n\r\n        return position === null ? null : (\r\n            <Marker position={position}>\r\n                <Popup>You are here</Popup>\r\n            </Marker>\r\n        )\r\n\r\n    }\r\n\r\n\r\n    async function buttonClick() {\r\n        setCurrentPos(false);\r\n        setIsVisible(false);\r\n        const response = await axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${currentPos.lat}&lon=${currentPos.lng}&appid=b6ce0db922efeb887782e1b76749bc61&units=metric`)\r\n        setWeather(response.data)\r\n        console.log(response.data)\r\n    }\r\n    function butClick() {\r\n        setIsVisible(true);\r\n        setWeather({})\r\n    }\r\n    const [position, setPosition] = useState([12, 77.304470])\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(getPosition);\r\n        }\r\n        function getPosition(position) {\r\n            console.log(position.coords.latitude, position.coords.longitude);\r\n            setPosition([position.coords.latitude, position.coords.longitude])\r\n\r\n\r\n\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <section style={{ display: 'flex' }}>\r\n                <h1>Map</h1>\r\n\r\n                {currentPos ?\r\n                    <button className=\"but\" variant=\"primary\" onClick={buttonClick}>Search</button>\r\n                    : null}\r\n\r\n                {Object.keys(weather).length === 0 ? null : <button className=\"but\" variant=\"primary\" onClick={butClick}>Cancel</button>}\r\n            </section>\r\n            <div style={{ width: \"100vw\", height: \"90vh\" }}>\r\n                {/* <LeafletMap center={[12, 77.304470]}\r\n                    zoom={16} onClick={handleClick}>\r\n                    <TileLayer\r\n                        url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n                    />\r\n                    {currentPos && <Marker position={currentPos} draggable={true}>\r\n                        <Popup position={currentPos}>\r\n                            Current location: <pre>{JSON.stringify(currentPos, null, 2)}</pre>\r\n                        </Popup>\r\n                    </Marker>}\r\n                </LeafletMap> */}\r\n\r\n                {isVisible ? <MapContainer style={{ height: '80vh' }} onClick={handleClick} center={position} zoom={13} scrollWheelZoom={false}>\r\n                    <TileLayer\r\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    />\r\n                    {currentPos && <Marker position={currentPos} draggable={true}>\r\n                        <Popup position={currentPos}>\r\n                            Current location: <pre>{JSON.stringify(currentPos, null, 2)}</pre>\r\n                        </Popup>\r\n                    </Marker>}\r\n                    <LocationMarker />\r\n\r\n                </MapContainer>\r\n                    : <div>\r\n                        <div className=\"card\">\r\n                            <header className=\"card-header\">\r\n                                <p className=\"card-header-title\">\r\n                                    <span style={\r\n                                        { color: \"white\", fontSize: \"20px\" }\r\n                                    }>{weather.name}</span> <br></br>\r\n                                    <span style={\r\n                                        { color: 'gray', fontSize: \"15px\" }\r\n                                    }> as of {`${newDate}`}IST</span><br></br>\r\n                                    <span style={\r\n                                        { color: \"white\", fontSize: \"60px\" }\r\n                                    }>{weather?.main?.temp}<sup>o</sup></span><br></br>\r\n                                    <span style={\r\n                                        { color: \"white\", fontSize: \"20px\" }\r\n                                    }>{weather?.weather?.length > 0 && weather?.weather[0]?.main}</span><br></br>\r\n                                    <span style={\r\n                                        { color: \"white\", fontSize: \"15px\", textTransform: \"capitalize\" }\r\n                                    }>{weather?.weather?.length > 0 && weather?.weather[0]?.description}</span>\r\n                                </p>\r\n                            </header>\r\n                            <section>\r\n                                <div className=\"card-content\">\r\n                                    <div className=\"content\">\r\n                                        Today's Forecast for {weather.name}\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Map;","C:\\Users\\NOEL ROY\\projects\\weather\\src\\About\\About.js",[],{"ruleId":"53","severity":1,"message":"54","line":6,"column":9,"nodeType":"55","messageId":"56","endLine":6,"endColumn":14},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"53","severity":1,"message":"61","line":2,"column":32,"nodeType":"55","messageId":"56","endLine":2,"endColumn":36},{"ruleId":"53","severity":1,"message":"62","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"63","line":1,"column":27,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"53","severity":1,"message":"64","line":19,"column":15,"nodeType":"55","messageId":"56","endLine":19,"endColumn":18},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"'Link' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'map' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]